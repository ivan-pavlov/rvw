% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{vwsetup}
\alias{vwsetup}
\title{Create Vowpal Wabbit model, setup model parameters and data}
\usage{
vwsetup(learning_mode = c("binary", "multiclass", "lda", "factorization",
  "bootstrap", "nn"), algorithm = c("sgd", "bfgs", "ftrl"),
  general_params = list(), optimization_params = list(),
  learning_params = list(), dir = tempdir(), train_data = "",
  test_data = "", model = "mdl.vw", eval = FALSE, cache = FALSE)
}
\arguments{
\item{learning_mode}{Learning method or reduction:
binary
multiclass
lda - Latent Dirichlet Allocation
factorization - matrix factorization mode
bootstrap - bootstrap with K rounds by online importance resampling
ksvm - online kernel Support Vector Machine
nn - sigmoidal feedforward network
boosting - online boosting with  weak learners}

\item{algorithm}{Optimzation algorithm}

\item{general_params}{List of parameters:
cache - Use a cache
passes - Number of Training Passes
bit_precision - number of bits in the feature table
quadratic - Create and use quadratic features
cubic - Create and use cubic features
interactions - Create feature interactions of any level between namespaces
permutations - Use permutations instead of combinations for feature interactions of same namespace
holdout_period - holdout period for test only
early_terminate - Specify the number of passes tolerated when holdout loss doesn't decrease before early termination
sort_features - Turn this on to disregard order in which features have been defined. This will lead  to smaller cache sizes
noconstant - Don't add a constant feature
ngram - Generate N grams
skips - Generate skips in N grams
hash - How to hash the features. Available options: strings, all
affix - Generate prefixes/suffixes of features
random_weights - Make initial weights random
sparse_weights - Use a sparse datastructure for weights
initial_weight - Set all weights to initial value}

\item{optimization_params}{List of parameters:
hessian_on - Use second derivative in line search
initial_pass_length - Initial number of examples per pass
l1 - L1 regularization
l2 - L2 regularization
decay_learning_rate - Set Decay factor for learning_rate between passes
initial_t - initial t value
power_t - t power value
learning_rate - Set initial learning Rate
loss_function - Specify the loss function to be used
quantile_tau - Parameter Tau associated with Quantile loss}

\item{learning_params}{List of parametrs associated with learning_mode
binary: 
   binary - Reports loss as binary classification with -1,1 labels
multiclass: 
   reduction - csoaa, oaa, ect, wap, csoaa_ldf multiclass learning
   num_classes - Number of classes
lda: 
   num_topics - Number of topics
   lda_alpha - Prior on sparsity of per-document topic weights
   lda_rho - Prior on sparsity of topic distributions
   lda_D - Number of documents
   lda_epsilon - Loop convergence threshold
   math_mode - Math mode: simd, accuracy, fast-approx
   minibatch - Minibatch size
factorization:
   rank - rank for matrix factorization
bootstrap:
   rounds - number of rounds
   bs_type - the bootstrap mode: 'mean' or 'vote'
nn:
   hidden - number of hidden units
   inpass - Train or test sigmoidal feedforward network with input passthrough
   multitask - Share hidden layer across all reduced tasks
   dropout - Train or test sigmoidal feedforward network using dropout.
   meanfield - Train or test sigmoidal feedforward network using mean field.
boosting:
   num_learners - number of weak learners
   num_learners - number of weak learners
   num_learners - number of weak learners
   num_learners - number of weak learners}

\item{dir}{Working directory, default is tempdir()}

\item{train_data}{Train data file name. File should be in .vw plain text format}

\item{test_data}{Validation data file name. File should be in .vw plain text format}

\item{model}{File name for model weights}

\item{eval}{Compute model evaluation}

\item{cache}{Create cache files}
}
\value{
vwmodel list class
}
\description{
Create Vowpal Wabbit model, setup model parameters and data
}
\examples{
vwsetup(
 dir = "../my_tmp/",
 train_data = "X_train.vw",
 test_data = "X_valid.vw",
 model = "pk_mdl.vw",
 cache = TRUE,
 general_params = list(passes=10),
 optimization_params = list(adaptive=FALSE),
 learning_params = list(binary=TRUE)
)

}
